require_relative '../resource'

module Convection
  module Model
    class Template
      class Resource
        ##
        # {{topic_title}}
        # {{resource_name}}
        ##
        class {{ruby_class_name}} < Resource

          {{#mixins}}
          include Model::Mixin::{{.}}
          {{/mixins}}

          {{#variables}}
          # @!scope class
          # @attribute [w]
          # {{name}}
          # {{description}} -- WIP
          # @note Required: {{required}}
          # @see {{resource_url}}
          property :{{name_underscore}}, '{{name}}'

          {{/variables}}
          {{#list_variables}}
          # @!scope class
          # @attribute [w]
          # {{name}}
          # {{description}} -- WIP
          # @note Required: {{required}}
          # @see {{resource_url}}
          property :{{name_underscore}}, '{{name}}', :array

          {{/list_variables}}

          def initialize(*args)
            super
            type '{{ruby_class_name}}'
          end
        end
      end
    end
  end

  module DSL
    module Template
      # DESCRIPTION -- WIP
      # The following resources are available:
      {{#variables}}
      # {Model::Template::Resource::{{ruby_class_name}}#{{name_underscore}} {{name_underscore}}}
      {{/variables}}
      {{#list_variables}}
      # {Model::Template::Resource::{{ruby_class_name}}#{{name_underscore}} {{name_underscore}}}
      {{/list_variables}}
      # @see {{url}}
      # @see {Model::Template::Resource::{{ruby_class_name}}}
      def {{ruby_class_name_underscore}}(name, &block)
        r = Model::Template::Resource::{{ruby_class_name}}.new(name, self)
        r.instance_exec(&block) if block
        resources[name] = r
      end
    end
  end
end
